import streamlit as st
import pandas as pd
import io

st.set_page_config(layout="wide")
st.title("ðŸš› Konteyner YÃ¼kleme Planlama AracÄ±")

uploaded_file = st.file_uploader("ðŸ“Ž Dosya yÃ¼kle (Excel formatÄ±nda)", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)

    # UzunluÄŸu Product Codeâ€™dan Ã§ek
    df["Uzunluk (cm)"] = df["Product Code"].apply(lambda x: int(str(x).split("/")[2]))
    df["Bobin AÄŸÄ±rlÄ±ÄŸÄ± (kg)"] = df["Uzunluk (cm)"] * 1.15
    df["Bobin Adedi"] = (df["Order"] / df["Bobin AÄŸÄ±rlÄ±ÄŸÄ± (kg)"]).round().astype(int)
    df["Ãœst Tabana Uygun"] = df["Uzunluk (cm)"] <= 1250

    st.dataframe(df)

    # Planlamaya baÅŸlamadan Ã¶nce tonaj sorulsun
    ton_basina_yuk = st.number_input("ðŸ§® Her bir konteyner planÄ± iÃ§in maksimum tonaj girin (kg)", min_value=1000, max_value=30000, value=25000, step=500)
    st.markdown(f"ðŸ’¡ Her konteyner iÃ§in maksimum yÃ¼kleme sÄ±nÄ±rÄ±: **{ton_basina_yuk:,} kg**")

    # Bobinleri satÄ±r satÄ±r Ã§oÄŸaltalÄ±m
    rows = []
    for _, row in df.iterrows():
        for _ in range(row["Bobin Adedi"]):
            rows.append({
                "ÃœrÃ¼n AdÄ±": row["Product Code"],
                "Uzunluk (cm)": row["Uzunluk (cm)"],
                "AÄŸÄ±rlÄ±k": row["Bobin AÄŸÄ±rlÄ±ÄŸÄ± (kg)"],
                "Ãœst Tabana Uygun": row["Ãœst Tabana Uygun"]
            })

    bobinler = pd.DataFrame(rows)
    bobinler = bobinler.sort_values(by="AÄŸÄ±rlÄ±k", ascending=False).reset_index(drop=True)

    planlar = []
    kalan_bobinler = bobinler.copy()

    while not kalan_bobinler.empty:
        konteyner = []
        toplam_agirlik = 0
        alt_sayac = 0
        ust_sayac = 0

        for idx in list(kalan_bobinler.index):
            bobin = kalan_bobinler.loc[idx]
            if toplam_agirlik + bobin["AÄŸÄ±rlÄ±k"] > ton_basina_yuk:
                continue

            if not bobin["Ãœst Tabana Uygun"] and alt_sayac < 11:
                konteyner.append({**bobin, "Taban": "Alt"})
                alt_sayac += 1
                toplam_agirlik += bobin["AÄŸÄ±rlÄ±k"]
                kalan_bobinler = kalan_bobinler.drop(idx)
            elif bobin["Ãœst Tabana Uygun"]:
                if alt_sayac < 11:
                    konteyner.append({**bobin, "Taban": "Alt"})
                    alt_sayac += 1
                    toplam_agirlik += bobin["AÄŸÄ±rlÄ±k"]
                    kalan_bobinler = kalan_bobinler.drop(idx)
                elif ust_sayac < 11:
                    konteyner.append({**bobin, "Taban": "Ãœst"})
                    ust_sayac += 1
                    toplam_agirlik += bobin["AÄŸÄ±rlÄ±k"]
                    kalan_bobinler = kalan_bobinler.drop(idx)

        planlar.append((f"Konteyner {len(planlar) + 1} - Toplam AÄŸÄ±rlÄ±k: {round(toplam_agirlik)} kg", pd.DataFrame(konteyner)))

    st.subheader("ðŸ“¦ Konteyner PlanlarÄ±")
    for plan_adi, tablo in planlar:
        st.markdown(f"### {plan_adi}")
        st.dataframe(tablo.reset_index(drop=True))

    # Ã–zet oluÅŸtur
    st.subheader("ðŸ“Š Planlama Ã–zeti")
    toplam_df = pd.concat([plan for _, plan in planlar])
    toplam_df = toplam_df.merge(df[["Product Code", "Order"]], left_on="ÃœrÃ¼n AdÄ±", right_on="Product Code", how="left")

    summary = toplam_df.groupby("ÃœrÃ¼n AdÄ±").agg({
        "AÄŸÄ±rlÄ±k": "sum",
        "Order": "first"
    }).reset_index()
    summary.rename(columns={"AÄŸÄ±rlÄ±k": "Planlanan YÃ¼k (kg)", "Order": "Toplam SipariÅŸ (kg)"}, inplace=True)
    summary["Kalan SipariÅŸ (kg)"] = summary["Toplam SipariÅŸ (kg)"] - summary["Planlanan YÃ¼k (kg)"]

    st.dataframe(summary)

    # Excel Ã§Ä±ktÄ±sÄ± indir
    output = io.BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        summary.to_excel(writer, index=False, sheet_name="Ã–zet")

    st.download_button(
        label="ðŸ“¥ Ã–zeti Excel olarak indir",
        data=output.getvalue(),
        file_name="konteyner_ozet.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )